// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target arm64-apple-ios14.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name NotificationComponent
import Foundation
import NACoreUtils
import NADomain
import NALocalization
import NANetworkPlatform
import NARealmPlatform
import NetAloLite
@_exported import NotificationComponent
import Resolver
import RxSwift
import Swift
import UIKit
import UserNotifications
import _Concurrency
public protocol NotificationComponentProtocol {
  func initialize()
  func replace(oldContent: UserNotifications.UNMutableNotificationContent) -> RxSwift.Single<UserNotifications.UNNotificationContent>
  func expired(oldContent: UserNotifications.UNMutableNotificationContent) -> UserNotifications.UNNotificationContent
  func convert(message: NADomain.NAMessage) -> RxSwift.Single<UserNotifications.UNNotificationContent>
  func convert(group: NADomain.NAGroup, message: NADomain.NAMessage) -> RxSwift.Single<UserNotifications.UNNotificationContent>
  func convert(userInfo: [Swift.AnyHashable : Any]) -> NADomain.NAMessage?
  func getRemoteMessageFrom(json: Swift.String) -> NotificationComponent.RemoteMessage?
}
public class NotificationComponentImpl : NotificationComponent.NotificationComponentProtocol {
  public init(enviroment: NetAloLite.EnvironmentType? = nil, appGroupId: Swift.String? = nil)
  public func initialize()
  public func convert(userInfo: [Swift.AnyHashable : Any]) -> NADomain.NAMessage?
  public func replace(oldContent: UserNotifications.UNMutableNotificationContent) -> RxSwift.Single<UserNotifications.UNNotificationContent>
  public func expired(oldContent: UserNotifications.UNMutableNotificationContent) -> UserNotifications.UNNotificationContent
  public func getRemoteMessageFrom(json: Swift.String) -> NotificationComponent.RemoteMessage?
  public func convert(message: NADomain.NAMessage) -> RxSwift.Single<UserNotifications.UNNotificationContent>
  public func convert(group: NADomain.NAGroup, message: NADomain.NAMessage) -> RxSwift.Single<UserNotifications.UNNotificationContent>
  @objc deinit
}
public struct RemoteMessage : Swift.Codable {
  public init(from decoder: Swift.Decoder) throws
  public func encode(to encoder: Swift.Encoder) throws
}
extension NotificationComponent.RemoteMessage : NADomain.DomainConvertibleType {
  public func asDomain() -> NADomain.NAMessage?
  public typealias DomainType = NADomain.NAMessage
}
public enum NANotificationType {
  case personal(senderName: Swift.String)
  case group(groupName: Swift.String, senderName: Swift.String, groupType: NADomain.NAGroup.GroupType)
}
public struct Constants {
  public static let messageKey: Swift.String
}
