// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target x86_64-apple-ios8.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Localize_Swift
import Foundation
@_exported import Localize_Swift
import Swift
import _Concurrency
extension Swift.String {
  public func localized(using tableName: Swift.String?, in bundle: Foundation.Bundle?) -> Swift.String
  public func localizedFormat(arguments: Swift.CVarArg..., using tableName: Swift.String?, in bundle: Foundation.Bundle?) -> Swift.String
  public func localizedPlural(argument: Swift.CVarArg, using tableName: Swift.String?, in bundle: Foundation.Bundle?) -> Swift.String
}
extension Swift.String {
  public func localized(in bundle: Foundation.Bundle?) -> Swift.String
  public func localizedFormat(arguments: Swift.CVarArg..., in bundle: Foundation.Bundle?) -> Swift.String
  public func localizedPlural(argument: Swift.CVarArg, in bundle: Foundation.Bundle?) -> Swift.String
}
public let LCLLanguageChangeNotification: Swift.String
public func Localized(_ string: Swift.String) -> Swift.String
public func Localized(_ string: Swift.String, arguments: Swift.CVarArg...) -> Swift.String
public func LocalizedPlural(_ string: Swift.String, argument: Swift.CVarArg) -> Swift.String
extension Swift.String {
  public func localized() -> Swift.String
  public func localizedFormat(_ arguments: Swift.CVarArg...) -> Swift.String
  public func localizedPlural(_ argument: Swift.CVarArg) -> Swift.String
}
@objc @_inheritsConvenienceInitializers open class Localize : ObjectiveC.NSObject {
  open class func updateStandardStorage(identifier: Swift.String)
  open class func availableLanguages(_ excludeBase: Swift.Bool = false) -> [Swift.String]
  open class func currentLanguage() -> Swift.String
  open class func doesLanguageSetup() -> Swift.Bool
  open class func setCurrentLanguage(_ language: Swift.String)
  open class func defaultLanguage() -> Swift.String
  open class func resetCurrentLanguageToDefault()
  open class func displayNameForLanguage(_ language: Swift.String) -> Swift.String
  @objc override dynamic public init()
  @objc deinit
}
extension Swift.String {
  public func localized(using tableName: Swift.String?) -> Swift.String
  public func localizedFormat(arguments: Swift.CVarArg..., using tableName: Swift.String?) -> Swift.String
  public func localizedPlural(argument: Swift.CVarArg, using tableName: Swift.String?) -> Swift.String
}
